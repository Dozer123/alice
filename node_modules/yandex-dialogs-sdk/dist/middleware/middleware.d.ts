import { IContext } from '../context';
import { IApiResponseBody } from '../api/response';
export interface IMiddlewareResult {
    responseBody: IApiResponseBody;
}
export declare type MiddlewareNext<TContext extends IContext = IContext> = (context: TContext) => Promise<IMiddlewareResult | null>;
export declare type Middleware<TContextFrom extends IContext = IContext, TContextTo extends IContext = TContextFrom> = (context: TContextFrom, next: MiddlewareNext<TContextTo> | null) => IMiddlewareResult | Promise<IMiddlewareResult | null>;
